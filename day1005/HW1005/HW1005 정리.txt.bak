-break와 continue
break : switch문이나 반복문에서 사용하여 break문이 있는 중괄호를 탈출하는 용도로 사용한다.
즉, 완전히 switch와 반복문을 벗어나게 됩니다.
continue : 반복문에서만 사용되며 반복문을 벗어나는 것이 아니라 반복문의 다음 조건식 혹은 다음 증감식을 수행하라는 의미이다.


break 예시)
a;
b;
for(int i =1; i<= 10; i++){
	System.out.println(i);
	if( i % 3 == 0 ){
		break;
	}
	System.out.println("hello");
}
c;
d;
를 실행하면

a,b 실행
1
hello
2
hello
3
c
d
이 된다

break는...
i가 3이 되었을때 조건식을 만족하여 반복문을 아예 탈출해버린다.

continue 예시) 
a;
b;
for(int i =1; i<= 10; i++){
	System.out.println(i);
	if( i % 3 == 0 ){
		continue
	}
	System.out.println("hello");
}
c;
d;

위의 코드를 실행하면
a
b
1
hello
2
hello
3
4
hello
5
hello
6
7
hello
8
hello
9
10
hello
c
d
이 나온다

continue는...
i가 3의 배수일때는 반복문 속의 그다음을 실행하지 않고 
다음 증감식을 수행하러 간다

-배열 여러 개 중에서 가장 큰 수 찾기
class MaxOfArray
{
public static void main(String[] args) 
{  
int []arr={9,3,7,15,2};
int max;
max=arr[0];
for(int i=1; i<arr.length; i++){
if(arr[i]>max)
{max=arr[i];}
				
}
System.out.println("max: "+max);
}
}

일단 max에 첫번째 배열 값을 저장해놓고
첫번째 배열값과 나머지 배열값들을 순서대로 비교해준다
비교해준 다음 두 수 중 큰 수를 max에 저장한다
그러면 자동적으로 max에는 배열의 원소들 중 가장 큰 수가 저장된다

